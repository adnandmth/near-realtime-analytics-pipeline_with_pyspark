x-spark-common: &spark-common
  image: gundala-spark:3.3.0
  volumes:
      - ./:/opt/bitnami/spark/app/
      - ./plugins/spark_sql_kafka/spark-sql-kafka-0-10_2.12-3.3.0.jar:/opt/bitnami/spark/jars/spark-sql-kafka-0-10_2.12-3.3.0.jar
      - ./plugins/spark_postgres_adapter/postgresql-42.2.16.jar:/opt/bitnami/spark/jars/postgresql-42.2.16.jar
      - ./plugins/kafka_clients/kafka-clients-3.3.0.jar:/opt/bitnami/spark/jars/kafka-clients-3.3.0.jar
      - ./plugins/kafka_clients/commons-pool2-2.11.1.jar:/opt/bitnami/spark/jars/commons-pool2-2.11.1.jar
      - ./plugins/kafka_clients/spark-token-provider-kafka-0-10_2.12-3.3.0.jar:/opt/bitnami/spark/jars/spark-token-provider-kafka-0-10_2.12-3.3.0.jar
  command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
  depends_on:
    - spark-master
  environment:
    SPARK_MODE: Worker
    SPARK_WORKER_CORES: 2
    SPARK_WORKER_MEMORY: 1g
    SPARK_MASTER_URL: spark://spark-master:7077
  networks:
    - datamasterylab

services:
  zookeeper1:
    image: bitnami/zookeeper:3.9.3
    hostname: zookeeper1
    container_name: zookeeper1
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=1
      - ZOO_SERVERS=zookeeper1:2888:3888;0.0.0.0:2888:3888;zookeeper3:2888:3888
    ports:
      - "2181:2181"
    volumes:
      - zookeeper1_data:/bitnami/zookeeper
    networks:
      - datamasterylab

  zookeeper2:
    image: bitnami/zookeeper:3.9.3
    hostname: zookeeper2
    container_name: zookeeper2
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=2
      - ZOO_SERVERS=zookeeper1:2888:3888;0.0.0.0:2888:3888;zookeeper3:2888:3888
    volumes:
      - zookeeper2_data:/bitnami/zookeeper
    networks:
      - datamasterylab

  zookeeper3:
    image: bitnami/zookeeper:3.9.3
    hostname: zookeeper3
    container_name: zookeeper3
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=3
      - ZOO_SERVERS=zookeeper1:2888:3888;zookeeper2:2888:3888;0.0.0.0:2888:3888
    volumes:
      - zookeeper3_data:/bitnami/zookeeper
    networks:
      - datamasterylab

  broker1:
    image: bitnami/kafka:3.9
    container_name: broker1
    ports:
      - "9093:9092"
    environment:
      # Unique ID for this Kafka broker (must be different across brokers in the same cluster)
      - KAFKA_BROKER_ID=1
      # Tell clients to connect to this hostname and port; must be resolvable by clients
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://broker1:9092
      # Connect to all ZooKeeper nodes for fault tolerance and high availability
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      # Listen for incoming connections on all interfaces at port 9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092      
      # Broker-to-broker communication uses the PLAINTEXT listener
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Do not auto-create topics to prevent accidental topic creation from typos or misconfigurations
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      # Bitnami-specific setting to allow non-TLS PLAINTEXT connections
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data_broker1:/bitnami/kafka
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    networks:
      - datamasterylab

  broker2:
    image: bitnami/kafka:3.9
    container_name: broker2
    ports:
      - "9094:9092"
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://broker2:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092      
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data_broker2:/bitnami/kafka
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    networks:
      - datamasterylab

  broker3:
    image: bitnami/kafka:3.9
    container_name: broker3
    ports:
      - "9095:9092"
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://broker3:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092      
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data_broker3:/bitnami/kafka
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    networks:
      - datamasterylab

  spark-master:
    image: gundala-spark:3.3.0
    volumes:
      - ./:/opt/bitnami/spark/app/
      - ./plugins/spark_sql_kafka/spark-sql-kafka-0-10_2.12-3.3.0.jar:/opt/bitnami/spark/jars/spark-sql-kafka-0-10_2.12-3.3.0.jar
      - ./plugins/spark_postgres_adapter/postgresql-42.2.16.jar:/opt/bitnami/spark/jars/postgresql-42.2.16.jar
      - ./plugins/kafka_clients/kafka-clients-3.3.0.jar:/opt/bitnami/spark/jars/kafka-clients-3.3.0.jar
      - ./plugins/kafka_clients/commons-pool2-2.11.1.jar:/opt/bitnami/spark/jars/commons-pool2-2.11.1.jar
      - ./plugins/kafka_clients/spark-token-provider-kafka-0-10_2.12-3.3.0.jar:/opt/bitnami/spark/jars/spark-token-provider-kafka-0-10_2.12-3.3.0.jar
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "9090:8080" # Spark web UI
      - "7077:7077"
    networks:
      - datamasterylab

  postgres:
    image: bitnami/postgresql:14
    container_name: postgres
    environment:
      - POSTGRESQL_USERNAME=admin
      - POSTGRESQL_PASSWORD=admin123
      - POSTGRESQL_DATABASE=postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/bitnami/postgresql
    networks:
      - datamasterylab

  spark-worker-1:
    <<: *spark-common

  spark-worker-2:
    <<: *spark-common

volumes:
  zookeeper1_data:
  zookeeper2_data:
  zookeeper3_data:
  kafka_data_broker1:
  kafka_data_broker2:
  kafka_data_broker3:
  postgres_data:

networks:
  datamasterylab: